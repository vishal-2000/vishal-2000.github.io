{"version":3,"sources":["../../src/commands/build.ts"],"names":["module","exports","build","program","global","__GATSBY","buildId","uuid","v4","root","directory","process","env","VERBOSE","verbose","report","setVerbose","profile","warn","name","sitePackageJson","sitePath","lastRun","Date","now","pid","publicDir","path","join","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","buildActivity","phantomActivity","start","telemetry","trackCli","exitCode","buildSpan","span","setTag","gatsbyNodeGraphQLFunction","workerPool","parentSpan","graphql","store","closeJavascriptBundleCompilation","closeHTMLBundleCompilation","webpackAssets","webpackCompilationHash","webpackSSRCompilationHash","engineBundlingPromises","buildActivityTimer","activityTimer","stats","close","hasWarnings","rawMessages","toJson","all","warnings","assets","cachedAssets","hash","err","panic","Stage","BuildJavascript","end","state","getState","push","rootDir","components","staticQueriesByTemplate","reporter","isVerbose","Promise","buildSSRBundleActivityProgress","BuildHTML","validateEnginesActivity","error","id","context","cacheActivity","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","queryIds","pageQueryIds","filter","query","waitForWorkerPoolRestart","resolve","GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING","restart","send","type","action","timestamp","toJSON","appDataUtil","exists","dispatch","payload","rewriteActivityTimer","write","html","ssrCompilationHash","isTrackingEnabled","bundleSizes","asset","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","queryStats","getStats","actions","setProgramStatus","db","saveState","keepPageRenderer","waitMaterializePageMode","toRegenerate","toDelete","waitWorkerPoolEnd","SSGCount","DSGCount","SSRCount","page","pages","mode","pagesCount","length","totalPagesCount","postBuildActivityTimer","e","message","_renderPageTree","functions","info","uptime","finish","logPages","writeToFile","createdFilesPath","createdFilesContent","deletedFilesPath","deletedFilesContent","fs","writeFile"],"mappings":"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","sourcesContent":["import path from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport signalExit from \"signal-exit\"\nimport fs from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport { updateSiteMetadata, isTruthy, uuid } from \"gatsby-core-utils\"\nimport {\n  buildRenderer,\n  buildHTMLPagesAndDeleteStaleArtifacts,\n  IBuildArgs,\n} from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nimport { bootstrap } from \"../bootstrap\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport { copyStaticDirs } from \"../utils/get-static-dir\"\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nimport * as db from \"../redux/save-state\"\nimport { store } from \"../redux\"\nimport * as appDataUtil from \"../utils/app-data\"\nimport { flush as flushPendingPageDataWrites } from \"../utils/page-data\"\nimport {\n  structureWebpackErrors,\n  reportWebpackWarnings,\n} from \"../utils/webpack-error-utils\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport { actions } from \"../redux/actions\"\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\nimport { Stage } from \"./types\"\nimport {\n  calculateDirtyQueries,\n  runStaticQueries,\n  runPageQueries,\n  writeOutRequires,\n} from \"../services\"\nimport {\n  markWebpackStatusAsPending,\n  markWebpackStatusAsDone,\n} from \"../utils/webpack-status\"\nimport { showExperimentNotices } from \"../utils/show-experiment-notice\"\nimport {\n  mergeWorkerState,\n  runQueriesInWorkersQueue,\n} from \"../utils/worker/pool\"\nimport { createGraphqlEngineBundle } from \"../schema/graphql-engine/bundle-webpack\"\nimport {\n  createPageSSRBundle,\n  writeQueryContext,\n} from \"../utils/page-ssr-module/bundle-webpack\"\nimport { shouldGenerateEngines } from \"../utils/engines-helpers\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type webpack from \"webpack\"\nimport { materializePageMode, getPageMode } from \"../utils/page-mode\"\nimport { validateEngines } from \"../utils/validate-engines\"\n\nmodule.exports = async function build(program: IBuildArgs): Promise<void> {\n  // global gatsby object to use without store\n  global.__GATSBY = {\n    buildId: uuid.v4(),\n    root: program!.directory,\n  }\n\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  report.setVerbose(program.verbose)\n\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.org/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  await updateSiteMetadata({\n    name: program.sitePackageJson.name,\n    sitePath: program.directory,\n    lastRun: Date.now(),\n    pid: process.pid,\n  })\n\n  markWebpackStatusAsPending()\n\n  const publicDir = path.join(program.directory, `public`)\n  initTracer(\n    process.env.GATSBY_OPEN_TRACING_CONFIG_FILE || program.openTracingConfigFile\n  )\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, {\n      exitCode: exitCode as number | undefined,\n    })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  const { gatsbyNodeGraphQLFunction, workerPool } = await bootstrap({\n    program,\n    parentSpan: buildSpan,\n  })\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n\n  // writes sync and async require files to disk\n  // used inside routing \"html\" + \"javascript\"\n  await writeOutRequires({\n    store,\n    parentSpan: buildSpan,\n  })\n\n  let closeJavascriptBundleCompilation: (() => Promise<void>) | undefined\n  let closeHTMLBundleCompilation: (() => Promise<void>) | undefined\n  let webpackAssets: Array<webpack.StatsAsset> | null = null\n  let webpackCompilationHash: string | null = null\n  let webpackSSRCompilationHash: string | null = null\n\n  const engineBundlingPromises: Array<Promise<any>> = []\n  const buildActivityTimer = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  buildActivityTimer.start()\n\n  try {\n    const { stats, close } = await buildProductionBundle(\n      program,\n      buildActivityTimer.span\n    )\n    closeJavascriptBundleCompilation = close\n\n    if (stats.hasWarnings()) {\n      const rawMessages = stats.toJson({ all: false, warnings: true })\n      reportWebpackWarnings(rawMessages.warnings, report)\n    }\n\n    webpackAssets = stats.toJson({\n      all: false,\n      assets: true,\n      cachedAssets: true,\n    }).assets as Array<webpack.StatsAsset>\n    webpackCompilationHash = stats.hash as string\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildJavascript, err))\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    const state = store.getState()\n    const buildActivityTimer = report.activityTimer(\n      `Building Rendering Engines`,\n      { parentSpan: buildSpan }\n    )\n    try {\n      buildActivityTimer.start()\n      // bundle graphql-engine\n      engineBundlingPromises.push(\n        createGraphqlEngineBundle(program.directory, report, program.verbose)\n      )\n\n      engineBundlingPromises.push(\n        createPageSSRBundle({\n          rootDir: program.directory,\n          components: state.components,\n          staticQueriesByTemplate: state.staticQueriesByTemplate,\n          reporter: report,\n          isVerbose: program.verbose,\n        })\n      )\n      await Promise.all(engineBundlingPromises)\n    } catch (err) {\n      reporter.panic(err)\n    } finally {\n      buildActivityTimer.end()\n    }\n  }\n\n  const buildSSRBundleActivityProgress = report.activityTimer(\n    `Building HTML renderer`,\n    { parentSpan: buildSpan }\n  )\n  buildSSRBundleActivityProgress.start()\n  try {\n    const { close, stats } = await buildRenderer(\n      program,\n      Stage.BuildHTML,\n      buildSSRBundleActivityProgress.span\n    )\n\n    closeHTMLBundleCompilation = close\n    webpackSSRCompilationHash = stats.hash as string\n\n    await close()\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n  } finally {\n    buildSSRBundleActivityProgress.end()\n  }\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    const validateEnginesActivity = report.activityTimer(\n      `Validating Rendering Engines`,\n      {\n        parentSpan: buildSpan,\n      }\n    )\n    validateEnginesActivity.start()\n    try {\n      await validateEngines(store.getState().program.directory)\n    } catch (error) {\n      validateEnginesActivity.panic({ id: `98001`, context: {}, error })\n    } finally {\n      validateEnginesActivity.end()\n    }\n  }\n\n  const cacheActivity = report.activityTimer(`Caching Webpack compilations`, {\n    parentSpan: buildSpan,\n  })\n  try {\n    cacheActivity.start()\n    await Promise.all([\n      closeJavascriptBundleCompilation?.(),\n      closeHTMLBundleCompilation?.(),\n    ])\n  } finally {\n    cacheActivity.end()\n  }\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: program.graphqlTracing,\n  })\n\n  const { queryIds } = await calculateDirtyQueries({ store })\n\n  // Only run queries with mode SSG\n  if (_CFLAGS_.GATSBY_MAJOR === `4`) {\n    queryIds.pageQueryIds = queryIds.pageQueryIds.filter(\n      query => getPageMode(query) === `SSG`\n    )\n  }\n\n  let waitForWorkerPoolRestart = Promise.resolve()\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    await runQueriesInWorkersQueue(workerPool, queryIds, {\n      parentSpan: buildSpan,\n    })\n    // Jobs still might be running even though query running finished\n    await waitUntilAllJobsComplete()\n    // Restart worker pool before merging state to lower memory pressure while merging state\n    waitForWorkerPoolRestart = workerPool.restart()\n    await mergeWorkerState(workerPool, buildSpan)\n  } else {\n    await runStaticQueries({\n      queryIds,\n      parentSpan: buildSpan,\n      store,\n      graphqlRunner,\n    })\n\n    await runPageQueries({\n      queryIds,\n      graphqlRunner,\n      parentSpan: buildSpan,\n      store,\n    })\n  }\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    await writeQueryContext({\n      staticQueriesByTemplate: state.staticQueriesByTemplate,\n      components: state.components,\n    })\n  }\n\n  if (process.send) {\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `ENGINES_READY`,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    if (\n      webpackCompilationHash !== state.webpackCompilationHash ||\n      !appDataUtil.exists(publicDir)\n    ) {\n      store.dispatch({\n        type: `SET_WEBPACK_COMPILATION_HASH`,\n        payload: webpackCompilationHash,\n      })\n\n      const rewriteActivityTimer = report.activityTimer(\n        `Rewriting compilation hashes`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      rewriteActivityTimer.start()\n\n      await appDataUtil.write(publicDir, webpackCompilationHash as string)\n\n      rewriteActivityTimer.end()\n    }\n\n    if (state.html.ssrCompilationHash !== webpackSSRCompilationHash) {\n      store.dispatch({\n        type: `SET_SSR_WEBPACK_COMPILATION_HASH`,\n        payload: webpackSSRCompilationHash,\n      })\n    }\n  }\n\n  await flushPendingPageDataWrites(buildSpan)\n  markWebpackStatusAsDone()\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = (webpackAssets as Array<webpack.StatsAsset>)\n      .filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  store.dispatch(actions.setProgramStatus(`BOOTSTRAP_QUERY_RUNNING_FINISHED`))\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  if (_CFLAGS_.GATSBY_MAJOR === `4` && shouldGenerateEngines()) {\n    // well, tbf we should just generate this in `.cache` and avoid deleting it :shrug:\n    program.keepPageRenderer = true\n  }\n\n  await waitForWorkerPoolRestart\n\n  // Start saving page.mode in the main process (while HTML is generated in workers in parallel)\n  const waitMaterializePageMode = materializePageMode()\n\n  const { toRegenerate, toDelete } =\n    await buildHTMLPagesAndDeleteStaleArtifacts({\n      program,\n      workerPool,\n      buildSpan,\n    })\n\n  await waitMaterializePageMode\n  const waitWorkerPoolEnd = Promise.all(workerPool.end())\n\n  {\n    let SSGCount = 0\n    let DSGCount = 0\n    let SSRCount = 0\n    for (const page of store.getState().pages.values()) {\n      if (page.mode === `SSR`) {\n        SSRCount++\n      } else if (page.mode === `DSG`) {\n        DSGCount++\n      } else {\n        SSGCount++\n      }\n    }\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      pagesCount: toRegenerate.length, // number of html files that will be written\n      totalPagesCount: store.getState().pages.size, // total number of pages\n      SSRCount,\n      DSGCount,\n      SSGCount,\n    })\n  }\n\n  const postBuildActivityTimer = report.activityTimer(`onPostBuild`, {\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: postBuildActivityTimer.span,\n  })\n  postBuildActivityTimer.end()\n\n  // Wait for any jobs that were started in onPostBuild\n  // This could occur due to queries being run which invoke sharp for instance\n  await waitUntilAllJobsComplete()\n\n  try {\n    await waitWorkerPoolEnd\n  } catch (e) {\n    report.warn(`Error when closing WorkerPool: ${e.message}`)\n  }\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  const state = store.getState()\n  reporter._renderPageTree({\n    components: state.components,\n    functions: state.functions,\n    pages: state.pages,\n    root: state.program.directory,\n  })\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildSpan.finish()\n  await stopTracer()\n  buildActivity.end()\n\n  if (program.logPages) {\n    if (toRegenerate.length) {\n      report.info(\n        `Built pages:\\n${toRegenerate\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (toDelete.length) {\n      report.info(\n        `Deleted pages:\\n${toDelete\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (program.writeToFile) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const createdFilesContent = toRegenerate.length\n      ? `${toRegenerate.join(`\\n`)}\\n`\n      : ``\n\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n    const deletedFilesContent = toDelete.length\n      ? `${toDelete.join(`\\n`)}\\n`\n      : ``\n\n    await fs.writeFile(createdFilesPath, createdFilesContent, `utf8`)\n    report.info(`.cache/newPages.txt created`)\n\n    await fs.writeFile(deletedFilesPath, deletedFilesContent, `utf8`)\n    report.info(`.cache/deletedPages.txt created`)\n  }\n\n  showExperimentNotices()\n\n  if (await userGetsSevenDayFeedback()) {\n    showSevenDayFeedbackRequest()\n  } else if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"file":"build.js"}